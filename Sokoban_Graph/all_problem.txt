(define (domain sokoban)
	(:requirements :strips)
	(:predicates (sokoban ?x)   								;sokoban is at location x
				 (crate ?x)     								;crate is at location x
				 (leftOf ?x ?y) 								;location x is to the left of locaiton y
				 (below ?x ?y)  								;location x is below location y
				 (at ?x ?y)     								;object x is at location y
				 (clear ?x))									;x is a location

	(:action moveLeft
		:parameters (?sokoban ?x ?y)
		:precondition (and (sokoban ?sokoban)
						   (at ?sokoban ?x)
						   (leftOf ?y ?x)   					;location y is to the left of location x
						   (clear ?y))      					;and y is empty/clear, so move left to y
		:effect (and (at ?sokoban ?y) (clear ?x)
				(not (at ?sokoban ?x)) (not (clear ?y))))

	(:action moveRight
		:parameters (?sokoban ?x ?y)
		:precondition (and (sokoban ?sokoban)
							(at ?sokoban ?x)
							(leftOf ?x ?y)    					;location x is to the left of y
							(clear ?y))       					;and y is clear, so move right to y
		:effect (and (at ?sokoban ?y) (clear ?x)
				(not (at ?sokoban ?x)) (not (clear ?y))))

	(:action moveUp
		:parameters (?sokoban ?x ?y)
		:precondition (and (sokoban ?sokoban)
						  (at ?sokoban ?x)
						  (below ?x ?y)      					;location x is below location y
						  (clear ?y))        					;and y is clear, so move up to y
		:effect (and (at ?sokoban ?y) (clear ?x)
				(not (at ?sokoban ?x)) (not (clear ?y))))

	(:action moveDown
		:parameters (?sokoban ?x ?y)
		:precondition (and (sokoban ?sokoban)
						  (at ?sokoban ?x)
						  (below ?y ?x)      					;location y is below location x
						  (clear ?y))        					;and y is clear, so move down to y
		:effect (and (at ?sokoban ?y) (clear ?x)
				(not (at ?sokoban ?x)) (not (clear ?y))))

	(:action pushLeft
		:parameters (?sokoban ?x ?y ?z ?crate)
		:precondition (and (sokoban ?sokoban)
							(crate ?crate)
							(leftOf ?y ?x)  					;location y is left of x
							(leftOf ?z ?y)    					;z (destination for block) is left of where the block currently is
							(at ?sokoban ?x)   					;sokoban player is at x
							(at ?crate ?y)     					;crate is at y							    					
							(clear ?z))        					;and location z is clear, so push crate left to z
		:effect (and (at ?sokoban ?y) (at ?crate ?z) 
				(clear ?x) 
				(not (at ?sokoban ?x)) 
				(not (at ?crate ?y)) 
				(not (clear ?z)) 
				(not (clear ?y))))
			   
	(:action pushRight
		:parameters (?sokoban ?x ?y ?z ?crate)
		:precondition (and (sokoban ?sokoban)
							(crate ?crate)
							(leftOf ?x ?y)						;x is left of y
							(leftOf ?y ?z)						;y is left of z
							(at ?sokoban ?x)					;sokoban is at x
							(at ?crate ?y)						;crate is at y
							(clear ?z))							;z is clear, so push crate right to z
		:effect (and (at ?sokoban ?y) (at ?crate ?z) 
				(clear ?x)
				(not (at ?sokoban ?x))
				(not (at ?crate ?y))
				(not (clear ?z))
				(not (clear ?y))))

	(:action pushUp
		:parameters (?sokoban ?x ?y ?z ?crate)
		:precondition (and (sokoban ?sokoban)
							(crate ?crate)
							(below ?x ?y)						;x is below y
							(below ?y ?z)						;y is below z
							(at ?sokoban ?x)					;sokoban is at x
							(at ?crate ?y)						;crate is at y
							(clear ?z))							;z is clear, so push crate up to z
		:effect (and (at ?sokoban ?y) (at ?crate ?z)
				(clear ?x)
				(not (at ?sokoban ?x))
				(not (at ?crate ?y))
				(not (clear ?y))
				(not (clear ?z))))


	(:action pushDown
		:parameters (?sokoban ?x ?y ?z ?crate)
		:precondition (and (sokoban ?sokoban)
							(crate ?crate)
							(below ?y ?x)						;y is below x
							(below ?z ?y)						;z is below y
							(at ?sokoban ?x)					;sokoban is at x
							(at ?crate ?y)						;crate is at y
							(clear ?z))							;z is clear, so push crate down to z
		:effect (and (at ?sokoban ?y) (at ?crate ?z)
				(clear ?x)
				(not (at ?sokoban ?x))
				(not (at ?crate ?y))
				(not (clear ?y))
				(not (clear ?z))))
)

(define (problem s1)
	(:domain sokoban)
	(:objects sokoban, crate2, l1, l2, l5, l6, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18)
	(:init (sokoban sokoban) 
		   (crate crate2)

		   ;;horizontal relationships
		   (leftOf l1 l2) 
		   (leftOf l5 l6) 
		   (leftOf l9 l10) (leftOf l10 l11) (leftOf l11 l12) 
 		   (leftOf l13 l14) (leftOf l14 l15) (leftOf l15 l16)
 		   (leftOf l17 l18)

 		   ;;vertical relationships
 		   (below l5 l1) (below l6 l2)
 		   (below l9 l5) (below l10 l6)
 		   (below l13 l9) (below l14 l10) (below l15 l11) (below l16 l12)
 		   (below l17 l13) (below l18 l14)

 		   ;;initialize sokoban and crate
		   (at sokoban l10)
 		   (at crate2 l15) 

 		   ;;clear spaces
		   (clear l1) 
		   (clear l2) 
		   (clear l5) 
		   (clear l6) 
		   (clear l9)
		   (clear l11)
		   (clear l12) 
		   (clear l13) 
		   (clear l14)
		   (clear l16) 
		   (clear l17)   				
		   (clear l18))

	(:goal (and (at crate2 l2)))
)

(define (problem s2)
	(:domain sokoban)
	(:objects sokoban1, sokoban2, crate1, crate2, l1, l2, l5, l6, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18)
	(:init (sokoban sokoban1) 
		   (sokoban sokoban2)
		   (crate crate1)	
		   (crate crate2)
		   
		   ;;horizontal relationships
		   (leftOf l1 l2) 
		   (leftOf l5 l6) 
		   (leftOf l9 l10) (leftOf l10 l11) (leftOf l11 l12) 
 		   (leftOf l13 l14) (leftOf l14 l15) (leftOf l15 l16)
 		   (leftOf l17 l18)

 		   ;;vertical relationships
 		   (below l5 l1) (below l6 l2)
 		   (below l9 l5) (below l10 l6)
 		   (below l13 l9) (below l14 l10) (below l15 l11) (below l16 l12)
 		   (below l17 l13) (below l18 l14)

 		   ;;initialize sokoban and crate
		   (at sokoban1 l10)
		   (at sokoban2 l16)
		   (at crate1 l9)
 		   (at crate2 l15) 

 		   ;;clear spaces
		   (clear l1) 
		   (clear l2) 
		   (clear l5) 
		   (clear l6) 
		   (clear l11)
		   (clear l12) 
		   (clear l13) 
		   (clear l14)
		   (clear l17)   				
		   (clear l18))

	(:goal (and (at crate1 l9) (at crate2 l2)))
)

(define (problem s3)
	(:domain sokoban)
	(:objects sokoban1, sokoban2, crate1, crate2, crate3, l1, l3, l4, l5, l6, l7, l9, l11, l12, l13, l15, l16, l17, l19,
			l21, l23, l25, l27, l29, l31, l32, l33, l35)
	(:init (sokoban sokoban1) 
		   (sokoban sokoban2)
		   (crate crate1)	
		   (crate crate2)
		   (crate crate3)

		   ;;horizontal relationships
		   (leftOf l3 l4) (leftOf l4 l5) (leftOf l5 l6)
		   (leftOf l11 l12)
		   (leftOf l15 l16) (leftOf l16 l17)
		   (leftOf l31 l32) (leftOf l32 l33)

		   ;;vertical relationships
		   (below l7 l1) (below l13 l7) (below l19 l13) (below l25 l19) (below l31 l25)
		   (below l9 l3) (below l15 l9) (below l21 l15) (below l27 l21) (below l33 l27)
		   (below l11 l5) (below l17 l11) (below l23 l17) (below l29 l23) (below l35 l29)
		   (below l12 l6)

		   ;;initialize objects
		   (at sokoban1 l1)
		   (at sokoban2 l7)
		   (at crate1 l5)
		   (at crate2 l11)
		   (at crate3 l29)

		   (clear l3) (clear l4) (clear l6) 
		   (clear l9) (clear l12)
		   (clear l13) (clear l15) (clear l16) (clear l17)
		   (clear l19) (clear l21) (clear l23)
		   (clear l25) (clear l27)
		   (clear l31) (clear l32) (clear l33) (clear l35))


	(:goal (and (at crate1 l6) (at crate2 l17) (at crate3 l35)))
)

(define (problem s4)
	(:domain sokoban)
	(:objects sokoban1, sokoban2, sokoban3, sokoban4, sokoban5, sokoban6, sokoban7, sokoban8, sokoban9, crate1, crate2, crate3, crate4, crate5, 			crate6, crate7, crate8, crate9, crate10, crate11, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19,
			l20, l21, l22, l23, l24, l25, l26, l27, l28, l29, l30, l31, l32, l33, l34, l35, l36)
	(:init (sokoban sokoban1) 
		   (sokoban sokoban2)
		   (sokoban sokoban3) 
		   (sokoban sokoban4)
		   (sokoban sokoban5) 
		   (sokoban sokoban6)
		   (sokoban sokoban7) 
		   (sokoban sokoban8)
		   (sokoban sokoban9)

		   (crate crate1)	
		   (crate crate2)
		   (crate crate3)
		   (crate crate4)	
		   (crate crate5)
		   (crate crate6)
		   (crate crate7)	
		   (crate crate8)
		   (crate crate9)
		   (crate crate10)	
		   (crate crate11)

		   ;;horizontal relationships
		   (leftOf l1 l2) (leftOf l2 l3) (leftOf l3 l4) (leftOf l4 l5) (leftOf l5 l6)
		   (leftOf l7 l8) (leftOf l8 l9) (leftOf l9 l10) (leftOf l10 l11) (leftOf l11 l12)
		   (leftOf l13 l14) (leftOf l14 l15) (leftOf l15 l16) (leftOf l16 l17) (leftOf l17 l18)
		   (leftOf l19 l20) (leftOf l20 l21) (leftOf l21 l22) (leftOf l22 l23) (leftOf l23 l24)
		   (leftOf l25 l26) (leftOf l26 l27) (leftOf l27 l28) (leftOf l28 l29) (leftOf l29 l30)
		   (leftOf l31 l32) (leftOf l32 l33) (leftOf l33 l34) (leftOf l34 l35) (leftOf l35 l36)
		   

		   ;;vertical relationships
		   (below l7 l1) (below l13 l7) (below l19 l13) (below l25 l19) (below l31 l25)
		   (below l8 l2) (below l14 l8) (below l20 l14) (below l26 l20) (below l32 l26)
		   (below l9 l3) (below l15 l9) (below l21 l15) (below l27 l21) (below l33 l27)
		   (below l10 l4) (below l16 l10) (below l22 l16) (below l28 l22) (below l34 l28)
		   (below l11 l5) (below l17 l11) (below l23 l17) (below l29 l23) (below l35 l29)
		   (below l12 l6) (below l18 l12) (below l24 l18) (below l30 l24) (below l36 l30)

		   ;;initialize objects
		   (at sokoban1 l1)
		   (at sokoban2 l4)
		   (at sokoban3 l10)
		   (at sokoban4 l12)
		   (at sokoban5 l14)
		   (at sokoban6 l16)
		   (at sokoban7 l19)
		   (at sokoban8 l31)
		   (at sokoban9 l36)

		   (at crate1 l7)
		   (at crate2 l9)
		   (at crate3 l5)
		   (at crate4 l11)
		   (at crate5 l18)
		   (at crate6 l20)
		   (at crate7 l22)
		   (at crate8 l25)
		   (at crate9 l29)
		   (at crate10 l32)
		   (at crate11 l35)


		   (clear l2) (clear l3) (clear l6)
		   (clear l8) 
		   (clear l13) (clear l15) (clear l17)
		   (clear l21) (clear l23) (clear l24)
		   (clear l26) (clear l27) (clear l28) (clear l30)
		   (clear l33) (clear l34))


	(:goal (and (at crate1 l13) 
				(at crate2 l8) 
				(at crate3 l6)
				(at crate4 l17) 
				(at crate5 l24) 
				(at crate6 l26)
				(at crate7 l28) 
				(at crate8 l31) 
				(at crate9 l23)
				(at crate10 l33) 
				(at crate11 l34)))
)